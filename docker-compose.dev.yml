
version: "3.8"
services:
  # Databases
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lms_db
      POSTGRES_USER: lms_user
      POSTGRES_PASSWORD: lms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # API Gateway
  kong:
    image: kong:3.4
    ports:
      - "8001:8001"
      - "8000:8000"
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    volumes:
      - ./kong/kong.yml:/kong/kong.yml

  # Core Microservices
  auth-service:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/auth-service:latest
    ports:
      - "8010:8010"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis

  user-service:
    build:
      context: .
      dockerfile: services/users/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/user-service:latest
    ports:
      - "8011:8011"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  department-service:
    build:
      context: .
      dockerfile: services/departments/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/department-service:latest
    ports:
      - "8012:8012"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  classes-service:
    build:
      context: .
      dockerfile: services/classes/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/classes-service:latest
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
      SERVICE_PORT: 8004
    depends_on:
      - postgres
      - redis

  subjects-service:
    build:
      context: .
      dockerfile: services/subjects/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/subjects-service:latest
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
      SERVICE_PORT: 8005
    depends_on:
      - postgres
      - redis

  semesters-service:
    build:
      context: .
      dockerfile: services/semesters/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/semesters-service:latest
    ports:
      - "8006:8006"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
      SERVICE_PORT: 8006
    depends_on:
      - postgres
      - redis

  exams-service:
    build:
      context: .
      dockerfile: services/exams/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/exams-service:latest
    ports:
      - "8013:8013"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  marks-service:
    build:
      context: .
      dockerfile: services/marks/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/marks-service:latest
    ports:
      - "8014:8014"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  analytics-service:
    build:
      context: .
      dockerfile: services/analytics/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/analytics-service:latest
    ports:
      - "8015:8015"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  notification-service:
    build:
      context: .
      dockerfile: services/notifications/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/notification-service:latest
    ports:
      - "8018:8018"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  copo-service:
    build:
      context: .
      dockerfile: services/copo/Dockerfile
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/copo-service:latest
    ports:
      - "8026:8026"
    environment:
      DATABASE_URL: postgresql://lms_user:lms_password@postgres:5432/lms_db
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis

  # Frontend
  frontend:
    build: ./frontend
    image: 067969189483.dkr.ecr.ap-south-1.amazonaws.com/frontend:latest
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      - kong

volumes:
  postgres_data:
  redis_data: